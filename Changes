Revision history for Perl extension Affix.pm

{{$NEXT}}

    - Support for ArrayRef[] with dynamic size
    - Support for empty Stuct[]
    - Coerce Enum[] types with sv2ptr(...)
    - Explicit undef values are turned into NULL in Pointer[], ArrayRef[], etc.
    - Provide default values in Struct[]
    - Ignore perl's PTRSIZE which might be different than the system's actual pointer size
    - Cleanup VM on Affix::END()
    - Simplify API around named subs
    - Bind exported values with rivet()

0.09 2023-01-26T01:36:55Z

    - Structs may now contain a CodeRef
    - CodeRef, Any, etc. are now properly handled as aggregate members
    - Nesting CodeRefs used as callbacks work now
    - Bind to exported values with pin()
    - Expose aggregate by value and syscall support in Affix::Feature
    - Survive callbacks with unexpectedly empty return values
    - Delayed type resolution with InstanceOf

0.08 2022-12-19T22:29:53Z

    - Correct struct alignment for perls with quadmath and/or longdouble enabled

0.07 2022-12-17T02:41:44Z

    - Pull upstream changes to dyncall 1.5 (unstable)

0.06 2022-12-16T07:20:23Z

    - Allow calling convention to be changed in param lists
    - Fix quadmath tests (I hope)
    - Attempt to build with nmake on Win32 smokers that have gcc but not GNU make (how? why?)
    - Fix default struct padding when passing around by value

0.05 2022-12-14T16:57:07Z

    - Expose offsetof( ... )
    - Pull upstream changes to dyncall 1.4 (stable)

0.04 2022-12-07T00:30:25Z

    - Affix.pm is born
